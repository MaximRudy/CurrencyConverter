import Foundation

enum Currency: String, CaseIterable, Codable {
    case rub = "RUB"
    case usd = "USD"
    case eur = "EUR"
    case gbp = "GBP"
    case chf = "CHF"
    case cny = "CNY"
    
    var id: String { rawValue }

    var name: String {
        switch self {
        case .rub: return "Russian Ruble"
        case .usd: return "US Dollar"
        case .eur: return "Euro"
        case .gbp: return "British Pound"
        case .chf: return "Swiss Franc"
        case .cny: return "Chinese Yuan"
        }
    }
    
    var flag: String {
        switch self {
        case .usd: return "ğŸ‡ºğŸ‡¸"
        case .eur: return "ğŸ‡ªğŸ‡º"
        case .rub: return "ğŸ‡·ğŸ‡º"
        case .gbp: return "ğŸ‡¬ğŸ‡§"
        case .cny: return "ğŸ‡¨ğŸ‡³"
        case .chf: return "ğŸ‡¨ğŸ‡­"
        }
    }
    
    var symbol: String {
        switch self {
        case .rub: return "â‚½"
        case .usd: return "$"
        case .eur: return "â‚¬"
        case .gbp: return "Â£"
        case .chf: return "CHF"
        case .cny: return "Â¥"
        }
    }
}
